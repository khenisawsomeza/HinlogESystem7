/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.hinlogesystem;

import javax.swing.JOptionPane;

/**
 *
 * @author Khenyshi
 */
public class Login extends javax.swing.JFrame {

    String username;
    String password;
    int id;
    
    public Login(){
        initComponents();
        submitBtn.setEnabled(false);
        dataInput.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        submitBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dataInput = new javax.swing.JComboBox<>();
        passInput = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInputActionPerformed(evt);
            }
        });

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("School Year:");

        dataInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataInputActionPerformed(evt);
            }
        });

        passInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(submitBtn)
                        .addGap(63, 63, 63))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(userInput)
                            .addComponent(passInput, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))))
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(loginBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dataInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(submitBtn)
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userInputActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        HinlogESystem system = new HinlogESystem();
        
        username = userInput.getText();
        password = passInput.getText();
        
       try {
           system.uname = username;
           system.pswd = password;
           
           system.DBConnect();
           
           if(system.isConnected){
               submitBtn.setEnabled(true);
               dataInput.setEnabled(true);  
           } else {
               submitBtn.setEnabled(false);
               dataInput.setEnabled(false);
               JOptionPane.showMessageDialog(null, "Invalid User") ;
           }
           
           system.rs = system.st.executeQuery("SHOW DATABASES WHERE `Database` NOT IN ('mysql', 'information_schema', 'performance_schema', 'sys');");
            
           dataInput.removeAllItems();
           
            while (system.rs.next()) { 
                dataInput.addItem(system.rs.getString(1)); 
            }   
            
       } catch (Exception ex){
           System.out.println("Login Failed: " + ex);
       }
       
    }//GEN-LAST:event_loginBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        HinlogESystem system = new HinlogESystem();
        
        if (!((String)dataInput.getSelectedItem() == null)){
            system.db = (String)dataInput.getSelectedItem();
            system.DBConnect();
        }
        
        try {
            system.rs = system.st.executeQuery("SHOW GRANTS FOR '" + username + "'@'" + system.host + "'");
        } catch (Exception e1) {
            System.out.println("Failed to check priveleges on " +system.host + ": " + e1);
            try{
                system.rs = system.st.executeQuery("SHOW GRANTS FOR '" + username + "'@'%'");
            }catch (Exception e2){
                System.out.println("Failed to check priveleges on %" + e2);
            }
        }

        StringBuilder grants = new StringBuilder();
        try {
            while (system.rs.next()) {
                grants.append(system.rs.getString(1)).append("\n");
            }
        } catch (Exception e){
            System.out.println("Failed to append prvilages of user: " + e);
        }
        String grantsStr = grants.toString().toUpperCase();

        if (username.equals("root") || grantsStr.contains("ALL PRIVILEGES")) {
            addDelimeter();
            StudentsForm form = new StudentsForm();
            form.setVisible(true);
            form.setLocationRelativeTo(null);

        } else if (grantsStr.contains("SELECT") && !grantsStr.contains("INSERT") && !grantsStr.contains("UPDATE")) {
            Reports report = new Reports();
            try {
                id = Integer.parseInt(username.substring(0, 4));
                report.createReportPDF(id);
            } catch (Exception e){
                System.out.println("Failed to Create PDF: " + e);
            }
        } else if (grantsStr.contains("SELECT")) {
            GradesForm gradeForm = new GradesForm(username);
            gradeForm.setVisible(true);
            gradeForm.setLocationRelativeTo(null);
        }
        
    }//GEN-LAST:event_submitBtnActionPerformed

    private void passInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passInputActionPerformed

    private void dataInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataInputActionPerformed

    public void addDelimeter(){
        HinlogESystem system = new HinlogESystem();
        
        try {
            String createProcedure = """
            DROP PROCEDURE IF EXISTS CheckScheduleConflict;
            CREATE PROCEDURE CheckScheduleConflict(
                IN p_studId INT,
                IN p_subId INT,
                OUT p_conflict BOOLEAN,
                OUT p_conflictSched VARCHAR(100)
            )
            BEGIN
                DECLARE done INT DEFAULT 0;
                DECLARE v_existingSched VARCHAR(100);
                DECLARE v_newSched VARCHAR(100);
                DECLARE v_existingDays VARCHAR(10);
                DECLARE v_newDays VARCHAR(10);
                DECLARE v_existingStart TIME;
                DECLARE v_existingEnd TIME;
                DECLARE v_newStart TIME;
                DECLARE v_newEnd TIME;
            
                DECLARE cur CURSOR FOR
                    SELECT s.subSchedule
                    FROM subjects s
                    JOIN Enroll e ON e.subjid = s.subId
                    WHERE e.studid = p_studId;
            
                DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
            
                SET p_conflict = FALSE;
                SET p_conflictSched = NULL;
            
                -- get new subject's sched
                SELECT subSchedule INTO v_newSched
                FROM subjects
                WHERE subId = p_subId;
            
                -- extract new subject day and time
                SET v_newDays = SUBSTRING_INDEX(v_newSched, ' ', 1);
                SET v_newStart = STR_TO_DATE(SUBSTRING_INDEX(SUBSTRING_INDEX(v_newSched, ' ', -1), '-', 1), '%H:%i');
                SET v_newEnd = STR_TO_DATE(SUBSTRING_INDEX(SUBSTRING_INDEX(v_newSched, '-', -1), ' ', 1), '%H:%i');
            
                OPEN cur;
            
                read_loop: LOOP
                    FETCH cur INTO v_existingSched;
                    IF done = 1 THEN
                        LEAVE read_loop;
                    END IF;
            
                    -- extract day and time
                    SET v_existingDays = SUBSTRING_INDEX(v_existingSched, ' ', 1);
                    SET v_existingStart = STR_TO_DATE(SUBSTRING_INDEX(SUBSTRING_INDEX(v_existingSched, ' ', -1), '-', 1), '%H:%i');
                    SET v_existingEnd = STR_TO_DATE(SUBSTRING_INDEX(SUBSTRING_INDEX(v_existingSched, '-', -1), ' ', 1), '%H:%i');
            
                    -- if days are the same, check for time overlap
                    IF v_existingDays = v_newDays THEN
                        IF (v_newStart < v_existingEnd AND v_newEnd > v_existingStart) THEN
                            SET p_conflict = TRUE;
                            SET p_conflictSched = v_existingSched;
                            LEAVE read_loop;
                        END IF;
                    END IF;
            
                END LOOP;
            
                CLOSE cur;
            END;
            """;

            system.st = system.con.createStatement();
            system.st.execute(createProcedure);
            system.st.close();

            System.out.println("Stored procedure 'CheckSchedule' created (or already exists).");

        } catch (Exception e) {
            System.out.println("Failed to create stored procedure: " + e);
        }

        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dataInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passInput;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField userInput;
    // End of variables declaration//GEN-END:variables
}
